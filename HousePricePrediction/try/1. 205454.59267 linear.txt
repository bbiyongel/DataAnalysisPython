import os
import pandas as pd
import matplotlib as matplt  # ploting tools
import matplotlib.pyplot as plt  # Visulization
import seaborn as sns  # BoxPlot 그리기 위해
import numpy as np

cwd = os.getcwd()  # Get the current working directory (cwd)
files = os.listdir(cwd)  # Get all the files in that directory
print("Files in '%s': %s" % (cwd, files))

# Set Data Path
KAGGLE_DATA_PATH = os.path.join("kaggle_competion")

def load_kaggle_data(kaggle_data_path=KAGGLE_DATA_PATH):
    train_csv_path = os.path.join(kaggle_data_path, "train.csv")
    test_csv_path = os.path.join(kaggle_data_path, "test.csv")
    return pd.read_csv(train_csv_path), pd.read_csv(test_csv_path)

# Loading Data
train, test = load_kaggle_data()

# Shape of Data
print("train.sahpe = ", train.shape)
print("test.shape = ", test.shape)

# Data's Head
print(train.head(10))
print(test.head(10))

# Date Data Check ( T000000가 없는것은 없는지 )
cnt = 0
for i in train["date"]:
    if i[8:] == "T000000":
        continue
    else:
        cnt = cnt + 1

if cnt == 0:
    print("'T000000'을 포함하지 않은것은 없습니다.")
else:
    print("포함되지 않은것이 있습니다.")

# date 변경
train['date'] = train['date'].apply(lambda x: x[0:8])
test['date'] = test['date'].apply(lambda  x: x[0:8])

# 결측치 탐색
print(train.isnull().sum())
print(test.isnull().sum())

# 목적변수 histogram
f, ax = plt.subplots(figsize=(8, 6))
sns.distplot(train['price'])
# plt.show()

# 이산형 변수 플롯팅 ( boxplot )
def discrete_data_box_plot(columname):
    print(train[columname].value_counts())
    fig, ax = plt.subplots(figsize=(8, 6))
    sns.boxplot(x=columname, y="price", data=train)
    plt.title("Box Plot" + columname)
    # plt.show()

# 연속형 변수 vs Price 플롯팅 ( scatter plot )
def show_target_scatter_plot(colum_name):
    plt.scatter(train[colum_name], train['price'])
    plt.xlabel(colum_name)
    plt.ylabel('price')
    plt.title('Price VS ' + colum_name)

# 이산형 변수 List
attributes_discrete = [
    'yr_built', 'yr_renovated', 'bedrooms', 'bathrooms',
    'floors', 'waterfront', 'view', 'condition', 'grade'
]

# 이산형 변수 BoxPlot
for i in attributes_discrete:
    discrete_data_box_plot(i)
    # plt.show()

# 연속형 변수 List
attributes_continuous = [
    'sqft_living', 'sqft_lot', 'sqft_above', 'sqft_basement',
    'lat', 'long', 'sqft_living15', 'sqft_lot15'
]

# 연속형 변수 vs Price( target value ) Scatter Plot
for i in attributes_continuous:
    show_target_scatter_plot(i)
    # plt.show()

from sklearn.linear_model import LinearRegression
import statsmodels.api as sm


train_columns = [c for c in train.columns if c not in ['id','price']]

model = sm.OLS(train['price'].values, train[train_columns].astype(float))
result = model.fit()

# print(result)
print(result.summary())

lin_reg = LinearRegression()
lin_reg.fit(train[train_columns], train['price'])

pred = lin_reg.predict(test[train_columns])
np.savetxt('predict.csv',pred,delimiter=',')
print(pred)
